{
  "openapi": "3.0.0",
  "info": {
    "title": "Garden Planner API",
    "version": "1.0.0",
    "description": "API documentation for Garden Planner"
  },
  "paths": {
    "/api/auth/google": {
      "get": {
        "summary": "Start Google OAuth login",
        "tags": [
          "Auth"
        ],
        "responses": {
          "302": {
            "description": "Redirects to Google login"
          }
        }
      }
    },
    "/api/auth/google/callback": {
      "get": {
        "summary": "Google OAuth callback",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OAuth successful, user logged in"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "summary": "Logout user",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "User logged out"
          }
        }
      }
    },
    "/api/gardens": {
      "get": {
        "summary": "Get all gardens",
        "tags": [
          "Gardens"
        ],
        "responses": {
          "200": {
            "description": "List of gardens"
          }
        }
      },
      "post": {
        "summary": "Create a garden (requires authentication)",
        "tags": [
          "Gardens"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "size": {
                    "type": "number"
                  },
                  "soilType": {
                    "type": "string"
                  },
                  "plants": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Garden created"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/gardens/{id}": {
      "get": {
        "summary": "Get a garden by ID",
        "tags": [
          "Gardens"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Garden ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Garden object"
          },
          "404": {
            "description": "Garden not found"
          }
        }
      },
      "put": {
        "summary": "Update a garden by ID (requires authentication)",
        "tags": [
          "Gardens"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Garden ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "size": {
                    "type": "number"
                  },
                  "soilType": {
                    "type": "string"
                  },
                  "plants": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Garden updated"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Garden not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a garden by ID (admin only)",
        "tags": [
          "Gardens"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Garden ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Garden deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (admin only)"
          },
          "404": {
            "description": "Garden not found"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get all users",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update a user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The user ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "googleId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "user",
              "admin"
            ]
          },
          "bio": {
            "type": "string"
          },
          "preferences": {
            "type": "object",
            "properties": {
              "notifications": {
                "type": "boolean"
              },
              "theme": {
                "type": "string"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication and OAuth operations"
    },
    {
      "name": "Gardens",
      "description": "Garden management"
    },
    {
      "name": "Users",
      "description": "User management and CRUD operations"
    }
  ]
}